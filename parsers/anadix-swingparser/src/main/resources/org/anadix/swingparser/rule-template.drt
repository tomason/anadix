/*
Copyright 2011 Tomas Schlosser

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
template header
tagName
tagClass

package org.anadix.swingparser


import java.math.BigInteger
import org.anadix.html.*


global HTMLElementFactory elementFactory
global BigInteger jump


template "htmlelements"

rule "@{tagName} pair"
	salience 1000
    when
        tag : StartTagEvent( tagName == "@{tagName}" ) from entry-point "parser"
        parent : HtmlElement (id == (tag.getId().divide(jump)))
        
        not (
        	HtmlElement( position == tag.position )
        )
    then
        HtmlElement e = elementFactory.create@{tagClass}(tag.getId(), parent, tag.getAttributes());       
        elementFactory.insertElement(e);
end

rule "@{tagName} single"
	salience 1000
    when
        tag : SimpleTagEvent( tagName == "@{tagName}" ) from entry-point "parser"
        parent : HtmlElement (id == (tag.getId().divide(jump)))
        
        not (
        	HtmlElement( position == tag.position )
        )
    then
        HtmlElement e = elementFactory.create@{tagClass}(tag.getId(), parent, tag.getAttributes());
        elementFactory.insertElement(e);
end

end template