/*
Copyright 2011 Tomas Schlosser

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
package org.anadix.swingparser


import java.math.BigInteger
import org.anadix.html.HTMLElementFactory
import org.anadix.html.HtmlElement

global HTMLElementFactory elementFactory
global BigInteger jump

declare SimpleTagEvent
	@role (event)
end

declare StartTagEvent
	@role (event)
end

declare EndTagEvent
	@role (event)
end

declare TextContentEvent
	@role (event)
end

rule "InsertHtml"
	salience 1000
	when
		html : StartTagEvent( tagName == "html" ) from entry-point "parser"
	then 
		HtmlElement e = elementFactory.createHtmlTag(html.getId(), html.getAttributes());
		e.setPosition(html.getPosition());
		
		elementFactory.insertElement(e);
end

rule "InsertElement"
	salience 100
	when
		e : StartTagEvent( $id : id, tagName != "html" ) from entry-point "parser"
		parent : HtmlElement( id == ($id.divide(jump)) )
		
		# the element is not yet inserted
		not ( HtmlElement( id == $id ) )
	then
		HtmlElement element = elementFactory.createTag($id, e.getTagName(), parent, e.getAttributes());
		element.setPosition(e.getPosition());
		
		elementFactory.insertElement(element);
end

rule "SetTextContent"
	no-loop
	salience 1000
	when
		e : TextContentEvent( $id : id, $text : textContent != null ) from entry-point "parser"
		parent : HtmlElement( id == $id )
	then
		modify(parent) {
			setTextContent($text);
		}
end
